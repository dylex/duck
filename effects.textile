---
title: Effects
---
h1. Effects

h2. General approaches

# How equivalent are uniqueness typing and monads?  In particular, what do the two look like when handing world state changes such as freezing/thawing regions of memory?
# We can handle imperative region effects by treating IO as "all" regions and adding various splitting operators that take pieces out of IO.  We'll also need types for "IO minus a region" for this purpose.  This all seems doable with the standard duck type system, since @>>=@ can take two different monad types and produce a third.

It seems that we've likely settled for now on effect typing.

h2. Effect types

* How much do effects need to be annotated in type signatures?  How much can be inferred?
